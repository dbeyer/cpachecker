# This file is part of CPAchecker,
# a tool for configurable software verification:
# https://cpachecker.sosy-lab.org
#
# SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
#
# SPDX-License-Identifier: Apache-2.0

# --------------------------------------------------------------------------
# This configuration file enables Interpolation-based Model Checking, 
# proposed in the paper "Interpolation and SAT-based Model Checking" 
# from K. L. McMillan. 
# It uses single-loop transformation (SLT) to deal with multi-loop programs.
# By default, SLT requires ProgramCounterCPA to rule out infeasible paths.
# However, this CPA and CallstackCPA would prevent merges of stop states.
# This configuration file explores the possibility to disable both of them.
# WARNING: this might not work correctly.
# --------------------------------------------------------------------------

#include includes/bmc-without-valueAnalysis.properties

// Enable SLT
cfa.transformIntoSingleLoop = true

// Disable ProgramCounterCPA and CallstackCPA to enable merges of stop states
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.loopbound.LoopBoundCPA
analysis.traversal.useCallstack = false

// this automaton defines which locations are the error locations
specification = specification/default.spc

#include includes/resource-limits.properties

#include includes/bmc-IMC.properties
